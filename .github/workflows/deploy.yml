name: Deploy Kubernetes
on:
  push:
    branches: ["main"]
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.6.1
      
    - name: Login to Oracle Cloud Infrastructure Registry (OCIR)
      run: |
        echo "${{ secrets.OCI_AUTH_TOKEN }}" | docker login -u "${{ secrets.OCI_NAMESPACE }}/${{ secrets.OCI_USER_MAIL }}" ${{ secrets.OCI_REGION }}.ocir.io --password-stdin        
        
    - name: Build and push Docker image to OCI
      run: |
        cd my-survey-app
        docker build -t ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}/my-survey-app:latest .
        docker push ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}/my-survey-app:latest      
        
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Install OCI CLI
        run: |
          curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash -s -- --accept-all-defaults
          echo 'export PATH=$PATH:/home/runner/.local/bin' >> $GITHUB_ENV
       
      - name: 'Write Config & Key Files'
        run: |
          mkdir ~/.oci
          echo "[DEFAULT]" >> ~/.oci/config
          echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
          echo "fingerprint=${{secrets.OCI_CLI_FINGERPRINT}}" >> ~/.oci/config
          echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
          echo "region=${{secrets.OCI_CLI_REGION}}" >> ~/.oci/config         
          echo "${{secrets.OCI_CLI_KEY_CONTENT}}" >> ~/.oci/key.pem
          echo "key_file=~/.oci/key.pem" >> ~/.oci/config              
       
      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.5.0
        id: kubectl-oke-action
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}
          
      - name: Deploy to Kubernetes
        run: |
         cd my-survey-app
         kubectl get nodes
         kubectl apply -f deployment.yaml --request-timeout='2m'
         kubectl get pods
         kubectl apply -f service.yaml --request-timeout='2m'
         kubectl get service




