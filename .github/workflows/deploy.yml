name: Deploy OCI Resources with Crossplane

on:
  push:
    branches: 
       - feat/crossplane
  workflow_dispatch:

jobs:
  install:
    name: Install CrossPlane
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7
      
    - name: Configure Kubectl
      uses: oracle-actions/configure-kubectl-oke@v1.5.0
      with:
        cluster: ${{ secrets.OKE_CLUSTER_OCID }}
      
    - name: Install Crossplane CLI
      run: curl -sL https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | sh

    - name: Configure OCI Provider
      env:
        OCI_CLI_USER: ${{ secrets.OCI_USER_OCID }}
        OCI_CLI_TENANCY: ${{ secrets.OCI_TENANCY_OCID }}
        OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
        OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
        OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      run: |
        kubectl crossplane install provider crossplane/provider-oci:latest
        kubectl create secret generic oci-creds -n crossplane-system \
          --from-literal=user_ocid=${OCI_CLI_USER} \
          --from-literal=tenancy_ocid=${OCI_CLI_TENANCY} \
          --from-literal=fingerprint=${OCI_CLI_FINGERPRINT} \
          --from-literal=private_key=${OCI_CLI_KEY_CONTENT} \
          --from-literal=region=${OCI_CLI_REGION} 

  deploy:
    needs: install
    name: Apply Object Storage Bucket Configuration 
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_USER_OCID }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_TENANCY_OCID }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCI_REGION: ${{ secrets.OCI_REGION }}.ocir.io

    steps:
    - name: Configure Kubectl
      uses: oracle-actions/configure-kubectl-oke@v1.5.0
      with:
        cluster: ${{ secrets.OKE_CLUSTER_OCID }}
        
    - name: Checkout
      uses: actions/checkout@v4.1.7
            
    - name: Deploy to Kubernetes
      run: |
        envsubst < kubernetes/deployment.yaml | kubectl apply -f -
        envsubst < examples/objectstorage/bucket.yaml | kubectl apply -f -
